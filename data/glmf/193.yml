---
date: 2016-05-01
displayed_date: Mai 2016
shop: https://boutique.ed-diamond.com/gnulinux-magazine/937-gnulinux-magazine-193.html


---
title: "Nouveau langage Perl 6 : une expressivité sans précédent"
author: Laurent Rosenfeld
page: 6
keywords:
  - Perl 6
  - Rakudo-Perl 6
  - Langage multiparadigme
  - Typage graduel
  - Opérateurs de listes
description: >
  La première version officielle de production du langage de programmation Perl 6 est sortie fin décembre 2015. Perl 6
  reste dans l'esprit de Perl, et sa syntaxe présente de fortes ressemblances avec les versions antérieures de Perl,
  mais c'est véritablement un nouveau langage, résolument moderne et d'une puissance expressive sans précédent.
summary: >
  Perl 6 est un nouveau langage de programmation propre, moderne et multiparadigme : il offre des possibilités de
  programmation procédurale, orientée objet et fonctionnelle ; il ne vous impose aucun de ces modèles de programmation,
  c'est vous qui choisissez selon vos besoins spécifiques et vos préférences personnelles. Il propose aussi au choix
  typage statique fort ou un typage dynamique.


---
title: Code et maintenabilité
author: The Cheshire Cat
page: 14
keywords:
  - Humeur
  - Développeur
  - Maintenabilité
  - Equipe
  - Code
  - Bonne pratique
description: >
  Ecrire du code, c'est ce que nous faisons. Mais pensons-nous au futur quand nous l'écrivons ? Ne devrions-nous pas ?
  Qu'est ce qui fait que notre code sera ou ne sera pas maintenable et comment améliorer les choses ?
summary: >
  Le but du code, ce n'est pas d'être écrit, le code en lui-même n'est pas une finalité. Le code est écrit pour que le
  programme qui le constitue fonctionne et ce programme doit fonctionner "longtemps". Qu'est ce que cela sous-entend
  pour nous, développeurs ? C'est ce dont nous allons commencer à parler ce mois-ci.


---
title: Peut on vraiment calculer avec un ordinateur ?
author: Florent Langrognet
page: 16
keywords:
  - Calcul
  - Réels
  - Flottants
  - Précision
  - Arithmétique
  - Norme
description: >
  Alors que le recours à l'ordinateur pour calculer toujours plus vite, modéliser toujours plus finement est inscrit
  dans une logique de progrès, il paraît indispensable de comprendre comment sont effectués ces calculs pour garder un
  regard critique sur la qualité des résultats qui ne sont qu'une approximation (plus ou moins bonne) des vraies
  valeurs. Comment sont stockés les réels, comment sont effectués les calculs, d'où viennent les erreurs de précision,
  peut-on les contenir ? Vous l'apprendrez en lisant cet article et sa suite.
summary: >
  Dans cette première partie, nous commencerons par donner quelques exemples afin de montrer que les erreurs de calcul
  arrivent très vite et peuvent, dans certains cas, donner des résultats totalement faux. Nous expliquerons ensuite
  comment sont stockés les réels dans les ordinateurs et montrerons ainsi que ces nombres réels (les flottants) ne
  représentent qu'un sous-ensemble des vrais réels.


---
title: Expliquer un code QR
author: Nicolas Patrois
page: 22
keywords:
  - Python
  - Code QR
  - Programmation orientée objet
description: >
  Vous en avez assez de voir des codes QR sans comprendre leur fonctionnement ? Voici comment lire leur contenu, qu'il
  soit entaché d'erreurs ou non et comment en créer.
summary: >
  Cette série de huit articles présente une étude presque complète des codes QR et pour commencer, une présentation du
  projet suivie d'une description du format et des premières méthodes de notre classe. Les deux articles suivants
  déchiffreront l'image en un tableau de bits puis en liront toutes les informations nécessaires à son décodage, c'est
  à dire écrire le message caché dans le magma de carrés noirs et blancs. Toutes les informations de format pourront
  également être affichées. Les codes QR entachés d'erreurs ou munis d'un petit dessin verront leur contenu corrigé à
  l'aide de codes de reed-Solomon (et un brève étude d'un corps fini ansi que son codage en Python seront nécessaires).
  Enfin, tout ceci nous servira pour créer un code QR fonctionnel.


---
title: Déchiffrer un code QR
author: Nicolas Patrois
page: 28
keywords:
  - Python
  - Code QR
  - Programmation orientée objet
  - Algorithme
  - Graphe
  - Expression rationnelle
description: >
  Après les présentations de l'article précédent, on continue notre voyage en lisant l'image du code QR pour la traduire
  en un tableau de 0 et de 1.
summary: >
  Dans cet article, on transformera l'image d'un code QR sans erreur ni joli petit dessin en un tableau de bits. Pour
  cela, on doit déterminer la taille d'un module, la position des cibles et éventuellement l'orientation de l'image.


---
title: Mettre en place un bureau virtuel sur son serveur dédié
author: Bruno Dubois
page: 32
keywords:
  - Session HTTP
  - Tomcat
  - Stateless Web Tier
  - Hava/J2EE
description: >
  Profitez des tarifs très abordables des serveurs dédiés Linux pour installer un serveur X et un bureau complet
  accessibles en permanence depuis votre tablette, votre laptop, le PC d'un ami ...
summary: >
  De nos jours, il est de plus en plus facile de se passer d'un "gros ordi" chez soi. En effet, hormis quelques cas
  spécifiques (les jeux vidéo 3D, les applications de montage vidéo, etc.) qui nécessitent un maximum de puissance, les
  ordinateurs d'entrée de gamme en vente actuellement ont des spécifications techniques bien supérieures à ce dont nous
  avons besoin pour envoyer un email ou même faire un tableau croisé dynamique dans notre tableur favori. De plus, les
  nouveaux usages se sont déplacés progressivement sur le Cloud. C'est à dire que notre laptop se transforme petit à
  petit en un simple terminal qui permet d'accéder à nos données, et même à nos applications, qui sont, elles, sur le
  net. Ce qui nous amène à nous contenter d'une tablette, ou même d'un smartphone, pour gérer notre vie numérique, car
  un latptop aussi devient trop puissant pour notre besoin.


---
title: Tomcat en version "Stateless"
author: Pierre-Emmanuel Gros
page: 38
keywords:
  - Session HTTP
  - Tomcat
  - Stateless Web Tier
  - Hava/J2EE
description: >
  Le but de cet article est de faire les modifications nécessaires afin de rendre Tomcat "clusterisable" en mode
  stateless pour des applications Java Rich Internet Application. Au menu de l'article, on ouvrira le ventre d'un
  serveur J2EE pour faire les modifications indispensables au processus de sauvegarde de session.
summary: >
  L'application phare de notre société est écrite en Java et gère un nombre important d'utilisateurs. Chaque utilisateur
  étant représenté par une session assez grosse, l'aventure de cet article a débuté lorsque j'ai dû reconfigurer le
  serveur Tomcat qui se mettait à gérer plus de 300 Mio de session. Nous aborderons donc dans cet article la
  programmation d'un module Tomcat permettant d'optimiser la gestion mémoire des sessions.


---
title: Git init /etc
author: Cyrille Colin
page: 46
keywords:
  - Etckeeper
  - Versionning
  - Git
  - Etc
  - Configuration
  - Administration système
  - Gitlab
  - Tickets
description: >
  Quelques fichiers de configuration ont été modifiés, quels paquets ont été installés ? Nous allons voir comment, avec
  l'outil etckeeper, nous pouvons obtenir les réponses à ces questions.
summary: >
  Conserver et consulter les modifications de configuration d'un serveur ? L'emploi des outils de gestion de version,
  comme git, permettent d'assister l'administrateur. Etckeeper permet lui d'adapter un système de gestion de versions à
  la sauvegarde d'un système de fichiers comme /etc. Couplé à un système de tickets il permet une traçabilité des
  actions, de visualiser les modifications apportées au système.


---
title: Rédiger son article avec AsciiDoc
author: Benoit Benedetti
page: 52
keywords:
  - Rédaction
  - Asciidoctor
  - LibreOffice
  - Asciidoc
description: >
  Si vous rédigez des articles pour GNU/Linux Magazine Grance, vous en avez peut-être assez d'utiliser
  OpenOffice/LibreOffice et de passer plus de temps à vous battre avec l'éditeur pour ajouter des styles à votre
  article, plutôt que dans la rédaction propre de l'article. Je vous propose de découvrir un thème asciidoctor que j'ai
  créé et qui va vous permettre de rédiger dans votre éditeur de texte préféré votre article au format asciidoc, pour le
  générer au format ODT attendu par l'équipe de rédaction du magazine. Et même si vous n'avez jamais écrit d'article,
  peut être que cet article vous mettra le pied à l'étrier, ou plus simplement vous donnera des idées pour utiliser
  asciidoc pour créer votre thème personnalisé asciidoctor pour générer vos propres documents.


---
title: Ecrire sont thème Asciidoctor
author: Benoit Benedetti
page: 56
keywords:
  - Rédaction
  - Asciidoctor
  - GLMF
  - Slim
  - (F)ODT
  - Asciidoc
description: >
  Vous avez testé la recette précédente pour générer un article à partir d'un fichier source Asciidoctor et vous
  aimeriez savoir comment écrire votre propre thème Asciidoctor pour générer vos documents personnalisés.
summary: >
  Asciidoctor possède un framework de création de thèmes pour générer vos documents personnalisés que nous allons
  découvrir.


---
title: Il en lui manque que la parole...
author: Tristant Colombo
page: 64
keywords:
  - Synthèse vocale
  - Espeak
  - SVOX Pico TTS
  - Google TTS
  - GNUSpeech
  - Web Speech
  - ResponsiveVoiceJS
description: >
  Nous avons tous déjà entendu cette phrase généralement prononcée par une personne âgée en flattant un chient : "il ne
  lui manque que la parole !". Mais c'est un chien... déjà que son maître parle, on ne va pas en plus devoir entendre
  l'animal ! Et un ordinateur, ça peut parler ?
summary: >
  Les solutions de synthèse vocale sont nombreuses sur le marché, qu'il s'agisse de solutions open source ou
  proprétaires. Pour pouvoir effectuer un choix il faut les tester ! C'est ce qui est fait dans cet article avec le test
  de six outils qui pourront être utilisés simplement dans vos programmes.


---
title: "Le graal à portée de main : écrire un interpreteur"
author: Guillaume Saupin
page: 72
keywords:
  - C++
  - Lisp
  - LLVM
  - Compilation
  - Parseur
  - Langage
description: >
  Dans le précédent article, notre héros, le Lisp, a fait l'objet d'un rappel de ses innombrables qualités. Inspirés par
  ce modèle, nous avons présentés rapideent le caractère modulaire que nous souhaitions donner à notre langage, puis
  décrit la structure de données contenant le code parsé, et enfin écrit un parseur récursif descendant. Tout ça n'est
  pas très utile. nous allons remédier à ça en ajoutant un interpréteur à notre langage;
summary: >
  Dans ce second article, nous allons donner vie à notre langage en lui offrant un interpréteur et un premier ensemble
  de fonctions arithmétiques tout en revenant en détail sur la gestion de nos modules.


---
title: "Android Context : quel context utiliser dans votre application Android ?"
author: Ramel Adjibi
page: 78
keywords:
  - Android
  - Java
  - Android Studio
  - Context
  - Activity
  - View
description: >
  Lors du développement d'une application mobile Android, on est souvent confronté au choix du Context afin
  d'initialiser tel ou tel composant ; cela peut être une vue, un adapter etc. Il existe plusieurs Context mis à notre
  disposition par le framework Android ; essayons de voir ensemble quel Context utiliser suivant la situation dans
  laquelle on pourrait se retrouver :-)
summary: >
  Optimiser son code pour éviter au maximum les fuites de mémoire est l'un des objectifs d'un bon développeur. Pour ce
  faire, plusieurs points sont à prendre en compte, comme le choix du Context à utiliser dans une situation donnée. Nous
  verrons ensemble dans la suite de l'article quels sont les Context mis à notre disposition et comment s'en servir à
  bon escient.
